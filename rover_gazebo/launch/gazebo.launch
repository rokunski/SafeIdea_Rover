<launch>

  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="pause" default="true"/>
  <arg name="world" default="$(find rover_gazebo)/worlds/mars.world"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg pause)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="use_sim_time" value="true"/>
  </include>

<!--  <param name="robot_description" command="$(find xacro)/xacro inorder '$(find rover_gazebo)/models/rover/rover.urdf'"/>

  <node name="rover_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model rover" />
--><param name="robot_description" command="$(find xacro)/xacro --inorder '$(find rover_gazebo)/models/rover/rover2.urdf'"/>

  <node name="rover_spawn2" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model rover2" />

<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
      <remap from="/joint_states" to="/rover/joint_states" />
  </node>

<param name="sphere_description" command="$(find xacro)/xacro --inorder '$(find rover_gazebo)/models/sphere/sphere.urdf'"/>

  <node name="sphere_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args=" -x -2 -urdf -param sphere_description -model sphere" />


<!--
  <rosparam file="$(find rover_gazebo)/config/config.yaml" command="load" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/rover" args="diff_drive_controller joint_state_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
      <remap from="/joint_states" to="/rover/joint_states" />
  </node>-->
</launch>
